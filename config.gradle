static def addRepositories(RepositoryHandler handler) {
    addStandardRepos(handler)
}

static def addStandardRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

static def addAliYunRepos(RepositoryHandler handler) {
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
}

ext {

    addRepositories = this.&addRepositories


    //Android 版本信息
    AndroidVersions = [
            compileSdkVersion: 29,
            buildToolsVersion: "29.0.2",
            minSdkVersion    : 21,
            targetSdkVersion : 29,
            versionCode      : 1,
            versionName      : "1.0.0"
    ]


    //第三方依赖版本号
    Versions = [
            gradleVersion            : "4.0.0",
            kotlinVersion            : "1.3.72",
            kotlinCoroutinesVersion  : "1.3.7",
            navigationVersion        : "2.2.0",
            lifecycleVersion         : "2.2.0",
            retrofitVersion          : "2.9.0",
            okHttpVersion            : "4.7.2",
            glideVersion             : "4.11.0",
            smartRefreshLayoutVersion: "2.0.1",
    ]

    //插件依赖
    Plugins = [
            androidBuildGradle: "com.android.tools.build:gradle:${Versions.gradleVersion}",
            kotlinGradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlinVersion}"
    ]

    //依赖路径
    Deps = [
            //默认依赖项
            kotlinStdlibJdk         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlinVersion}",
            androidxAppcompat       : "androidx.appcompat:appcompat:1.1.0",
            androidxCoreKtx         : "androidx.core:core-ktx:1.3.0",
            androidxConstraintLayout: "androidx.constraintlayout:constraintlayout:1.1.3",
            junit                   : "junit:junit:4.13",
            junitTest               : "androidx.test.ext:junit:1.1.1",
            espressoCore            : "androidx.test.espresso:espresso-core:3.2.0",

            //navigation(https://developer.android.google.cn/guide/navigation/navigation-getting-started)
            navigationKtx           : "androidx.navigation:navigation-fragment-ktx:${Versions.navigationVersion}",
            navigationUiKtx         : "androidx.navigation:navigation-ui-ktx:${Versions.navigationVersion}",
            // Dynamic Feature Module Support
            navigationDynamic       : "androidx.navigation:navigation-dynamic-features-fragment:${Versions.navigationVersion}",

            //lifecycle对kotlin支持
            viewModelKtx            : "androidx.lifecycle:lifecycle-viewmodel-ktx:$Versions.lifecycleVersion",
            liveDataKtx             : "androidx.lifecycle:lifecycle-livedata-ktx:$Versions.lifecycleVersion",
            // Saved state module for ViewModel
            viewModelSaveState      : "androidx.lifecycle:lifecycle-viewmodel-savedstate:$Versions.lifecycleVersion",
            // alternately - if using Java8, use the following instead of lifecycle-compiler
            ifecycleCommonJava8     : "androidx.lifecycle:lifecycle-common-java8:$Versions.lifecycleVersion",
            //kotlin 协程
            kotlinCoroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.kotlinCoroutinesVersion}",

            //第三方依赖
            //网络
            retrofit                : "com.squareup.retrofit2:retrofit:${Versions.retrofitVersion}",
            retrofitGsonConverter   : "com.squareup.retrofit2:converter-gson:${Versions.retrofitVersion}",
            okHttp                  : "com.squareup.okhttp3:okhttp:${Versions.okHttpVersion}",
            okHttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${Versions.okHttpVersion}",
            gson                    : "com.google.code.gson:gson:2.8.6",

            //图片加载库
            glide                   : "com.github.bumptech.glide:glide:${Versions.glideVersion}",
            glideCompiler           : "com.github.bumptech.glide:compiler:${Versions.glideVersion}",
            //Glide使用okHttp请求网络
            glideOkhttp3Integration : "com.github.bumptech.glide:okhttp3-integration:${Versions.glideVersion}",

            //刷新界面库(https://github.com/scwang90/SmartRefreshLayout)
            //核心库
            smartRefreshLayout      : "com.scwang.smart:refresh-layout-kernel:${Versions.smartRefreshLayoutVersion}",
    ]
}